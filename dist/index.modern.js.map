{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useRef } from \"react\";\n\nimport { createStore as create, StoreApi, useStore } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { shallow } from \"zustand/shallow\";\n\nconst DEFAULT_ZUSTAND_STORE_Value = \"DEFAULT_ZUSTAND_STORE_Value\";\n\nexport default function createZustandStoreContext<\n  T extends Record<string, unknown>,\n  O extends string = \"\"\n>({\n  defaultState,\n  localStorage,\n  name,\n}: {\n  defaultState: T;\n  localStorage?: {\n    force?: boolean;\n    migrate?: (persistedState: unknown, version: number) => T;\n    name: string;\n    partialize?: (state: T) => Partial<T>;\n    version?: number;\n  };\n  name?: string;\n}) {\n  const createStore = !localStorage\n    ? (state: T) => create<T>(() => state)\n    : (state: T) => {\n        const store = create<T>()(\n          persist(() => state, {\n            ...localStorage,\n            partialize:\n              localStorage.partialize ||\n              ((state) => {\n                delete state[\"DEFAULT_ZUSTAND_STORE_Value\"];\n                return state;\n              }),\n          })\n        );\n\n        localStorage.force && store.setState(state);\n\n        return store;\n      };\n  const defaultStore = createStore({\n    ...defaultState,\n    [DEFAULT_ZUSTAND_STORE_Value]: true,\n  });\n  const storeContext = createContext(defaultStore);\n\n  const useContextStore = (storeId?: string, initialState: Partial<T> = {}) => {\n    const prevId = useRef(storeId);\n    const storeRef = useRef<StoreApi<T>>();\n\n    if (!storeRef.current || prevId.current !== storeId) {\n      storeRef.current = createStore({\n        ...defaultState,\n        ...initialState,\n      });\n\n      prevId.current = storeId;\n    }\n\n    return storeRef.current;\n  };\n\n  type StateAPI = Omit<StoreApi<T>, \"setState\" | \"getState\" | \"destroy\"> & {\n    setState: (value: Partial<Omit<T, O>>) => void;\n  };\n\n  function useState(): StateAPI;\n\n  function useState<U extends Record<string, unknown>>(\n    selector: (state: T) => U\n  ): StateAPI & U;\n\n  function useState<U extends Record<string, unknown>>(\n    selector?: (state: T) => U\n  ): StateAPI & U {\n    const store = useContext(storeContext);\n\n    if (\n      typeof store === \"undefined\" ||\n      store.getState()[DEFAULT_ZUSTAND_STORE_Value]\n    ) {\n      throw new Error(\n        `${name ? name + \": \" : \"\"}useState must be used within a provider`\n      );\n    }\n\n    const state = useStore(store, selector ?? (() => ({} as U)), shallow);\n\n    return {\n      ...store,\n      ...state,\n      setState: useCallback(\n        (value: Partial<Omit<T, O>>) =>\n          store.setState((state: T) => ({ ...state, ...value })),\n        [store]\n      ),\n    };\n  }\n\n  return {\n    storeContext,\n    useState,\n    useStore: useContextStore,\n  };\n}\n"],"names":["DEFAULT_ZUSTAND_STORE_Value","createZustandStoreContext","defaultState","localStorage","name","createStore","state","create","persist","_extends","partialize","force","store","setState","defaultStore","storeContext","createContext","useState","selector","useContext","getState","Error","useStore","shallow","useCallback","value","storeId","initialState","prevId","useRef","storeRef","current"],"mappings":"kcAMA,MAAiCA,EAAG,8BAEZC,SAAAA,GAGtBC,aACAA,EAAYC,aACZA,EAAYC,KACZA,IAYA,MAAMC,EAAeF,EAEhBG,IACC,QAAcC,IACZC,EAAQ,IAAMF,EAAKG,EAAA,GACdN,EAAY,CACfO,WACEP,EAAaO,YACXJ,CAAAA,WACYA,EAA8B,4BACnCA,QAOf,OAFAH,EAAaQ,OAASC,EAAMC,SAASP,GAGvCM,GAjBCN,GAAaC,EAAU,IAAMD,GAkBhBQ,EAAGT,EAChBH,EAAAA,CAAAA,EAAAA,EACH,CAAAF,CAACA,IAA8B,KAEfe,EAAGC,EAAcF,GAuDnC,MAAO,CACLC,eACAE,SA7BF,SACEC,GAEA,MAAMN,EAAQO,EAAWJ,GAEzB,QACmB,IAAVH,GACPA,EAAMQ,WAAWpB,GAEjB,MAAM,IAASqB,OACVjB,EAAOA,EAAO,KAAO,IAArB,2CAIP,MAAME,EAAQgB,EAASV,QAAOM,EAAAA,EAAa,KAAO,CAAQ,GAAGK,GAE7D,OACKX,EAAAA,CAAAA,EAAAA,EACAN,EACHO,CAAAA,SAAUW,EACPC,GACCb,EAAMC,SAAUP,GAAmBA,EAAAA,CAAAA,EAAAA,EAAUmB,IAC/C,CAACb,KAGP,EAKEU,SAxDsB,CAACI,EAAkBC,EAA2B,CAAA,KACpE,MAAMC,EAASC,EAAOH,GACRI,EAAGD,IAWjB,OATKC,EAASC,SAAWH,EAAOG,UAAYL,IAC1CI,EAASC,QAAU1B,EACdH,EAAAA,CAAAA,EAAAA,EACAyB,IAGLC,EAAOG,QAAUL,KAGHK,SA6CpB"}