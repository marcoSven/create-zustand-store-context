{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useRef } from \"react\";\n\nimport { createStore as create, StoreApi, useStore } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { shallow } from \"zustand/shallow\";\n\nconst DEFAULT_ZUSTAND_STORE_Value = \"DEFAULT_ZUSTAND_STORE_Value\";\n\nexport function createZustandStoreContext<\n  T extends Record<string, unknown>,\n  O extends string = \"\"\n>({\n  defaultState,\n  localStorage,\n  name,\n}: {\n  defaultState: T;\n  localStorage?: {\n    force?: boolean;\n    migrate?: (persistedState: unknown, version: number) => T;\n    name: string;\n    partialize?: (state: T) => Partial<T>;\n    version?: number;\n  };\n  name?: string;\n}) {\n  const createStore = !localStorage\n    ? (state: T) => create<T>(() => state)\n    : (state: T) => {\n        const { migrate, partialize, ...config } = localStorage;\n        const isObject = (obj: unknown): obj is Record<string, unknown> =>\n          typeof obj === \"object\" &&\n          obj !== null &&\n          !Array.isArray(obj) &&\n          Object.keys(obj).every((key) => typeof key === \"string\");\n\n        const store = create<T>()(\n          persist(() => state, {\n            ...config,\n            migrate: migrate\n              ? (persistedState: unknown, version: number): T =>\n                  isObject(persistedState)\n                    ? ((obj: Record<string, unknown>) =>\n                        ((obj): obj is T => {\n                          const set: Record<string, unknown> = {};\n\n                          for (const k of Object.keys(obj)) {\n                            set[k] = 1;\n                          }\n\n                          for (const k of Object.keys(\n                            (localStorage &&\n                              localStorage.partialize?.(state)) ||\n                              state\n                          )) {\n                            if (!set[k]) return false;\n\n                            set[k] = 2;\n                          }\n\n                          for (const k in set) {\n                            if (set[k] === 1) return false;\n                          }\n\n                          return true;\n                        })(obj)\n                          ? obj\n                          : state)(migrate(persistedState, version))\n                    : state\n              : undefined,\n            partialize: partialize || ((state) => state),\n          })\n        );\n\n        localStorage.force && store.setState(state);\n\n        return store;\n      };\n  const defaultStore = createStore({\n    ...defaultState,\n    [DEFAULT_ZUSTAND_STORE_Value]: true,\n  });\n  const storeContext = createContext(defaultStore);\n\n  const useContextStore = (storeId?: string, initialState: Partial<T> = {}) => {\n    const prevId = useRef(storeId);\n    const storeRef = useRef<StoreApi<T>>();\n\n    if (!storeRef.current || prevId.current !== storeId) {\n      storeRef.current = createStore({\n        ...defaultState,\n        ...initialState,\n      });\n\n      prevId.current = storeId;\n    }\n\n    return storeRef.current;\n  };\n\n  type StateAPI = Omit<StoreApi<T>, \"setState\" | \"getState\" | \"destroy\"> & {\n    setState: (value: Partial<Omit<T, O>>) => void;\n  };\n\n  function useState(): StateAPI;\n\n  function useState<U extends Record<string, unknown>>(\n    selector: (state: T) => U\n  ): StateAPI & U;\n\n  function useState<U extends Record<string, unknown>>(\n    selector?: (state: T) => U\n  ): StateAPI & U {\n    const store = useContext(storeContext);\n\n    if (\n      typeof store === \"undefined\" ||\n      store.getState()[DEFAULT_ZUSTAND_STORE_Value]\n    ) {\n      throw new Error(\n        `${name ? name + \": \" : \"\"}useState must be used within a provider`\n      );\n    }\n\n    const state = useStore(store, selector ?? (() => ({} as U)), shallow);\n\n    return {\n      ...store,\n      ...state,\n      setState: useCallback(\n        (value: Partial<Omit<T, O>>) =>\n          store.setState((state: T) => ({ ...state, ...value })),\n        [store]\n      ),\n    };\n  }\n\n  return {\n    storeContext,\n    useState,\n    useStore: useContextStore,\n  };\n}\n"],"names":["_excluded","DEFAULT_ZUSTAND_STORE_Value","createZustandStoreContext","defaultState","localStorage","name","createStore","state","migrate","partialize","config","_objectWithoutPropertiesLoose","store","create","persist","_extends","persistedState","version","isObject","obj","Array","isArray","Object","keys","every","key","set","k","undefined","force","setState","defaultStore","storeContext","createContext","useState","selector","useContext","getState","Error","useStore","shallow","useCallback","value","useContextStore","storeId","initialState","prevId","useRef","storeRef","current"],"mappings":"kcAAA,MAAAA,EAAA,CAAA,UAAA,cAMMC,EAA8B,8BAE9B,SAAUC,GAGdC,aACAA,EAAYC,aACZA,EAAYC,KACZA,IAYA,MAAMC,EAAeF,EAEhBG,IACC,MAAMC,QAAEA,EAAOC,WAAEA,GAA0BL,EAAXM,oIAAMC,CAAKP,EAAYJ,GAOjDY,EAAQC,IACZC,EAAQ,IAAMP,EAAKQ,EACdL,CAAAA,EAAAA,EACHF,CAAAA,QAASA,EACL,CAACQ,EAAyBC,KACxBC,MAVO,iBADCC,EAWCH,IATT,OAARG,IACCC,MAAMC,QAAQF,IACfG,OAAOC,KAAKJ,GAAKK,MAAOC,GAAuB,iBAARA,GAQ3B,CAAEN,GACA,CAAEA,IACA,MAAMO,EAA+B,CAAE,EAEvC,IAAK,MAAMC,KAAKL,OAAOC,KAAKJ,GAC1BO,EAAIC,GAAK,EAGX,IAAK,MAAMA,KAAKL,OAAOC,KACpBnB,IACCA,MAAAA,EAAaK,gBAAbL,EAAAA,EAAaK,WAAaF,KAC1BA,GACD,CACD,IAAKmB,EAAIC,GAAI,OAAY,EAEzBD,EAAIC,GAAK,CACV,CAED,IAAK,MAAMA,KAAKD,EACd,GAAe,IAAXA,EAAIC,GAAU,OACnB,EAED,OAAO,CACR,EAtBD,CAsBGR,GACCA,EACAZ,EAzBN,CAyBaC,EAAQQ,EAAgBC,IACrCV,EAtCIY,KAsCC,OACXS,EACJnB,WAAYA,GAAU,CAAMF,GAAUA,OAM1C,OAFAH,EAAayB,OAASjB,EAAMkB,SAASvB,GAE9BK,GAjDRL,GAAaM,EAAU,IAAMN,GAmD5BwB,EAAezB,EAAWS,EAC3BZ,CAAAA,EAAAA,EACH,CAAAF,CAACA,IAA8B,KAE3B+B,EAAeC,EAAcF,GAuDnC,MAAO,CACLC,eACAE,SA7BF,SACEC,GAEA,MAAMvB,EAAQwB,EAAWJ,GAEzB,QACmB,IAAVpB,GACPA,EAAMyB,WAAWpC,GAEjB,MAAM,IAAIqC,OACLjC,EAAOA,EAAO,KAAO,IAArB,2CAIP,MAAME,EAAQgC,EAAS3B,EAAOuB,MAAAA,EAAAA,EAAa,KAAO,CAAQ,GAAGK,GAE7D,OAAAzB,EAAA,CAAA,EACKH,EACAL,EAAK,CACRuB,SAAUW,EACPC,GACC9B,EAAMkB,SAAUvB,GAAQQ,EAAA,CAAA,EAAWR,EAAUmC,IAC/C,CAAC9B,KAGP,EAKE2B,SAxDsBI,CAACC,EAAkBC,EAA2B,CAAA,KACpE,MAAMC,EAASC,EAAOH,GAChBI,EAAWD,IAWjB,OATKC,EAASC,SAAWH,EAAOG,UAAYL,IAC1CI,EAASC,QAAU3C,EAAWS,KACzBZ,EACA0C,IAGLC,EAAOG,QAAUL,GAGZI,EAASC,SA6CpB"}